{
    "pipes": [],
    "interfaces": [
        {
            "name": "ActionCardContentInterface",
            "id": "interface-ActionCardContentInterface-0d5563267e351e40e555e7f5c003ff48bbb2d5ab645ba9438a04a3abcfef9aae87bfc6917e9ae810bf6117c2a7e74412103c6602689d9aec763794ed01ff6db0",
            "file": "src/app/action-card-module/components/action-card-component/action-card-content-interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ActionCardContentInterface {\r\n    cardRowTitle: string;\r\n    isDeletableAction?: boolean;\r\n    cardBadgeText?: string;\r\n    cardActionPopoverHeader?: string;\r\n    cardActionPopoverBody?: string;\r\n    cardRowListItems: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "cardActionPopoverBody",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "cardActionPopoverHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "cardBadgeText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "cardRowListItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "cardRowTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isDeletableAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-216aa658deee64af5c5d682044ca41affebc80eb04e001768908fc62502303de2e92c33649488c066db91c93d11e34f9eeffa780f9d27ccfde419dce7f2a2b5b",
            "file": "src/app/components/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [
                "./about.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./about.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>about works!</p>\r\n\r\n"
        },
        {
            "name": "ActionCardComponentComponent",
            "id": "component-ActionCardComponentComponent-784b57e4fd1898c469f1eb98910385576b2161a8265f9a39772fd6c4b7f7b8c11ee6b0746293ef7306f183d148af7559aa0512c97962fa453f424ea51331b7be",
            "file": "src/app/action-card-module/components/action-card-component/action-card-component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-action-card-component",
            "styleUrls": [
                "./action-card-component.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./action-card-component.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "addActivityText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "cardContentRow",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ActionCardContentInterface[]",
                    "decorators": []
                },
                {
                    "name": "deleteText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isDeletableAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "titleColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, EventEmitter, Output } from '@angular/core';\r\nimport { ActionCardContentInterface } from './action-card-content-interface';\r\n\r\n@Component({\r\n  selector: 'app-action-card-component',\r\n  templateUrl: './action-card-component.component.html',\r\n  styleUrls: ['./action-card-component.component.scss'],\r\n})\r\nexport class ActionCardComponentComponent {\r\n  @Input() isDeletableAction!: boolean;\r\n  @Input() title!: string;\r\n  @Input() titleColor!: string;\r\n  @Input() addActivityText!: string;\r\n  @Input() deleteText!: string;\r\n  @Input() cardContentRow: ActionCardContentInterface[] = [];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../variables';\r\n\r\n.container {\r\n  .card {\r\n    margin: $spacing-lg;\r\n    .card-top {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: $spacing-lg;\r\n      .card-title {\r\n        font-weight: $font-weight-bold;\r\n        font-size: $font-size-lg;\r\n      }\r\n      button {\r\n        border: none;\r\n        background-color: $transparent;\r\n        font-weight: $font-weight-bold;\r\n        font-size: $font-size-base;\r\n      }\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./action-card-component.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container\">\r\n  <div class=\"card\">\r\n    <div class=\"card-top\">\r\n      <h5 class=\"card-title\" [ngStyle]=\"{ color: titleColor }\">{{ title }}</h5>\r\n      <button>\r\n        <i class=\"bi bi-plus-circle\"></i>\r\n        {{ addActivityText }}\r\n      </button>\r\n    </div>\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ActionCardRowComponent",
            "id": "component-ActionCardRowComponent-5039790e3952cd632f446c40691df7a23379cd08e41cb73ac6b5c945b876dffdd1e28cadaab92d1e02493136c6ce9f941d10cebf6fbac7565478a06328e2b5b4",
            "file": "src/app/action-card-module/components/action-card-row/action-card-row.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-action-card-row",
            "styleUrls": [
                "./action-card-row.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./action-card-row.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "deleteText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "row",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "ActionCardContentInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionCardRow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "deleteCardRow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "editCardRow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isListOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "showPopover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "closePopover",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ActionCardContentInterface } from '../action-card-component/action-card-content-interface';\r\n\r\n@Component({\r\n  selector: 'app-action-card-row',\r\n  templateUrl: './action-card-row.component.html',\r\n  styleUrls: ['./action-card-row.component.scss'],\r\n})\r\nexport class ActionCardRowComponent {\r\n  @Input() deleteText!: string;\r\n  @Input() row!: ActionCardContentInterface;\r\n  @Output() editCardRow = new EventEmitter();\r\n  @Output() deleteCardRow = new EventEmitter();\r\n  @Output() actionCardRow = new EventEmitter();\r\n  isListOpen: boolean;\r\n  showPopover: boolean;\r\n  \r\n\r\n  constructor() {\r\n    this.isListOpen = false;\r\n    this.showPopover = false;\r\n  }\r\n\r\n  closePopover(): void {\r\n    this.showPopover = false;\r\n  }\r\n\r\n  toggleList(): void {\r\n    this.isListOpen = !this.isListOpen;\r\n  }\r\n\r\n  onEdit(): void {\r\n    this.editCardRow.emit();\r\n  }\r\n\r\n  onDelete(): void {\r\n    this.deleteCardRow.emit();\r\n  }\r\n\r\n  onAction(): void {\r\n    this.actionCardRow.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../variables';\r\n\r\n.card-body {\r\n  position: relative;\r\n  padding: $spacing-base 0;\r\n  .accordion-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    .title-row {\r\n      display: flex;\r\n      .title {\r\n        font-weight: $font-weight-bold;\r\n        font-size: $font-size-base;\r\n        padding-inline: $spacing-base;\r\n      }\r\n      .badge {\r\n        border-radius: $radius-lg;\r\n      }\r\n    }\r\n  }\r\n  .icons {\r\n    display: flex;\r\n    gap: $spacing-sm;\r\n    .popover-container {\r\n      position: absolute;\r\n      background-color: $popover-background-color;\r\n      border: $popover-border;\r\n      border-radius: $radius-base;\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 800px;\r\n      height: 145px;\r\n      transform: translate(-100%, -120%);\r\n      .popover-body {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        color: $popover-text-color;\r\n        margin:  $spacing-sm;\r\n      }\r\n    }\r\n  }\r\n  ul {\r\n    margin-left: $spacing-base;\r\n    li {\r\n      font-size: $font-size-sm;\r\n    }\r\n  }\r\n}\r\ni,\r\n.deleteText {\r\n  cursor: pointer;\r\n}",
                    "styleUrl": "./action-card-row.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "templateData": "<div class=\"card-body\">\r\n  <ng-container>\r\n    <div class=\"accordion-header\">\r\n      <div (click)=\"toggleList()\" class=\"title-row\">\r\n        <i class=\"bi bi-chevron-compact-up\" *ngIf=\"isListOpen\"></i>\r\n        <i class=\"bi bi-chevron-compact-down\" *ngIf=\"!isListOpen\"></i>\r\n        <div class=\"title\">{{ row.cardRowTitle }}</div>\r\n        <span\r\n          *ngIf=\"!row.isDeletableAction\"\r\n          class=\"badge bg-secondary d-inline-flex align-items-center\"\r\n          >{{ row.cardBadgeText }}</span\r\n        >\r\n      </div>\r\n      <div class=\"icons\">\r\n        <i class=\"bi bi-pencil-square\" (click)=\"onEdit()\"></i>\r\n        <div class=\"delete-action\" *ngIf=\"!row.isDeletableAction\">\r\n          <span class=\"deleteText\" (click)=\"showPopover = true\" (click)=\"onAction()\">{{\r\n            deleteText\r\n          }}</span>\r\n          <div *ngIf=\"showPopover\" class=\"popover-container\">\r\n            <div class=\"popover-body\">\r\n              <strong>{{ row.cardActionPopoverHeader }}</strong\r\n              ><i (click)=\"closePopover()\" class=\"bi bi-x\"></i>\r\n            </div>\r\n            <div class=\"popover-body\">\r\n              {{ row.cardActionPopoverBody }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <i *ngIf=\"row.isDeletableAction\" class=\"bi bi-trash\" (click)=\"onDelete()\"></i>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"isListOpen\">\r\n    <ul *ngFor=\"let listItem of row.cardRowListItems\">\r\n      <li>{{ listItem }}</li>\r\n    </ul>\r\n  </ng-container>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b5186258766dce4b2277d7e451e4cfe0b2907c38f8b20fb6e9f8a2949a46427129188b8601736947385b22a5afa891bd1c3e93531dc455226b383701ffb5540a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'action-card'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'action-card';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-home></app-home>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-343a617833dd377f9529c5df527a883615808b45f171ad2a0352b7a406ad3f019b405af4ca3bc4b347ed484df131d60c748079d0021439ad67643cb42d77d0ec",
            "file": "src/app/components/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cardContentRow",
                    "defaultValue": "[\r\n    {\r\n      cardRowTitle: 'Discover New Features',\r\n      isDeletableAction: false,\r\n      cardBadgeText: 'Must have item',\r\n      cardActionPopoverHeader:\r\n        'Do you want to delete this feature? First create another “must have tool”.',\r\n      cardActionPopoverBody:\r\n        'There must be at least one “Must have tool” in your list. If you wish to delete this feature, you first need to create another feature with the same badge.',\r\n      cardRowListItems: [\r\n        'Interactive Dashboard',\r\n        'Smart Reminders & Notifications',\r\n        'Data-driven Decision Making',\r\n      ],\r\n    },\r\n    {\r\n      cardRowTitle: 'Better Workflow',\r\n      isDeletableAction: true,\r\n      cardBadgeText: '',\r\n      cardActionPopoverHeader: '',\r\n      cardActionPopoverBody: '',\r\n      cardRowListItems: [],\r\n    },\r\n    {\r\n      cardRowTitle: 'Achieve Great Results',\r\n      isDeletableAction: true,\r\n      cardBadgeText: '',\r\n      cardActionPopoverHeader: '',\r\n      cardActionPopoverBody: '',\r\n      cardRowListItems: [],\r\n    },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionCardContentInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "deleteText",
                    "defaultValue": "'Delete?'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onActionCardRow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteCardRow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEditCardRow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ActionCardContentInterface } from 'src/app/action-card-module/components/action-card-component/action-card-content-interface';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent {\r\n  deleteText: string = 'Delete?';\r\n  cardContentRow: ActionCardContentInterface[] = [\r\n    {\r\n      cardRowTitle: 'Discover New Features',\r\n      isDeletableAction: false,\r\n      cardBadgeText: 'Must have item',\r\n      cardActionPopoverHeader:\r\n        'Do you want to delete this feature? First create another “must have tool”.',\r\n      cardActionPopoverBody:\r\n        'There must be at least one “Must have tool” in your list. If you wish to delete this feature, you first need to create another feature with the same badge.',\r\n      cardRowListItems: [\r\n        'Interactive Dashboard',\r\n        'Smart Reminders & Notifications',\r\n        'Data-driven Decision Making',\r\n      ],\r\n    },\r\n    {\r\n      cardRowTitle: 'Better Workflow',\r\n      isDeletableAction: true,\r\n      cardBadgeText: '',\r\n      cardActionPopoverHeader: '',\r\n      cardActionPopoverBody: '',\r\n      cardRowListItems: [],\r\n    },\r\n    {\r\n      cardRowTitle: 'Achieve Great Results',\r\n      isDeletableAction: true,\r\n      cardBadgeText: '',\r\n      cardActionPopoverHeader: '',\r\n      cardActionPopoverBody: '',\r\n      cardRowListItems: [],\r\n    },\r\n  ];\r\n\r\n  onEditCardRow(): void {\r\n    console.log('edit');\r\n  }\r\n  onDeleteCardRow(): void {\r\n    console.log('delete');\r\n  }\r\n  onActionCardRow(): void {\r\n    console.log('action');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../variables'; \r\n\r\napp-action-card-row:not(.last) {\r\n  border-bottom: $line-lg;\r\n}\r\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-action-card-component\r\n  titleColor=\"red\"\r\n  title=\"Card for Organizing Activities\"\r\n  addActivityText=\"Add activity\" \r\n>\r\n  <app-action-card-row\r\n    [ngStyle]=\"{ margin: '0 32px' }\"\r\n    *ngFor=\"let row of cardContentRow; let last = last\"\r\n    [ngClass]=\"{ last: last }\"\r\n    [row]=\"row\"\r\n    [deleteText]=\"deleteText\"\r\n    (editCardRow)=\"onEditCardRow()\"\r\n  (actionCardRow)=\"onActionCardRow()\"\r\n  (deleteCardRow)=\"onDeleteCardRow()\"\r\n  >\r\n  </app-action-card-row\r\n></app-action-card-component>\r\n"
        }
    ],
    "modules": [
        {
            "name": "ActionCardModuleModule",
            "id": "module-ActionCardModuleModule-75d22a904120efb59c1afc08d38fa173b7af34f3c238a29130908be3f598a9ed2c8d01c2f59b87edca0cc0d1fbb05114e5188bc4ea5773fc35b9da432982e948",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/action-card-module/action-card-module.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ActionCardComponentComponent } from './components/action-card-component/action-card-component.component';\r\nimport { ActionCardRowComponent } from './components/action-card-row/action-card-row.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ActionCardComponentComponent,\r\n    ActionCardRowComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ActionCardComponentComponent,\r\n    ActionCardRowComponent,\r\n  ],\r\n})\r\nexport class ActionCardModuleModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ActionCardComponentComponent"
                        },
                        {
                            "name": "ActionCardRowComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ActionCardComponentComponent"
                        },
                        {
                            "name": "ActionCardRowComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-b81b71c03dc31cb498c5e160423b25066051d3dbfd77308f28b24e58284e9802f3125ce4e2ad4eb64089bba1d767dde6a08ee06a10d0cb2d0503be20c32159d1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ActionCardModuleModule } from './action-card-module/action-card-module.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    AboutComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ActionCardModuleModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ActionCardModuleModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ActionCardTitleRow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ActionCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        title: \"Card for Organizing Activities\",\r\n        addActivityText: \"Add activity\",\r\n        titleColor: 'red'\r\n    }\r\n}"
            },
            {
                "name": "ActionCardWithAllData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ActionCardWithHomedata.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    deleteText: 'Delete?',\r\n    cardContentRow: [\r\n      {\r\n        cardRowTitle: 'Discover New Features',\r\n        isDeletableAction: false,\r\n        cardBadgeText: 'Must have item',\r\n        cardActionPopoverHeader:\r\n          'Do you want to delete this feature? First create another “must have tool”.',\r\n        cardActionPopoverBody:\r\n          'There must be at least one “Must have tool” in your list. If you wish to delete this feature, you first need to create another feature with the same badge.',\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n      {\r\n        cardRowTitle: 'Better Workflow',\r\n        isDeletableAction: true,\r\n        cardBadgeText: '',\r\n        cardActionPopoverHeader: '',\r\n        cardActionPopoverBody: '',\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n      {\r\n        cardRowTitle: 'Achieve Great Results',\r\n        isDeletableAction: true,\r\n        cardBadgeText: '',\r\n        cardActionPopoverHeader: '',\r\n        cardActionPopoverBody: '',\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n    ], \r\n    onEditCardRow: () => console.log('Edit Card Row'),\r\n    onActionCardRow: () => console.log('Action Card Row'),\r\n    onDeleteCardRow: () => console.log('Delete Card Row'),\r\n \r\n}\r\n}"
            },
            {
                "name": "DeletableRow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ActionCardRow.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n      row: {\r\n        cardRowTitle: 'Discover New Features',\r\n        isDeletableAction: true,\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n    },\r\n  }"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ActionCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ActionCardComponentComponent>",
                "defaultValue": "{\r\n    title: 'Project/ActionCardComponent',\r\n    component: ActionCardComponentComponent,\r\n    tags: [],\r\n    render: (args: ActionCardComponentComponent) => ({\r\n        props: { ...args },\r\n    }),\r\n    //track events in that story: jei butu click\r\n    argTypes: { },\r\n    decorators: [\r\n        applicationConfig({\r\n            providers: []\r\n        }),\r\n        moduleMetadata({\r\n            declarations: [ ActionCardComponentComponent, ActionCardRowComponent ],\r\n        }),\r\n        componentWrapperDecorator((story)=> `<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\"> <div> ${story }</div>`),\r\n    ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ActionCardRow.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ActionCardRowComponent>",
                "defaultValue": "{\r\n    title: 'Project/ActionCardRow',\r\n    component: ActionCardRowComponent,\r\n    tags: [],\r\n    render: (args: ActionCardRowComponent) => ({\r\n      props: { ...args },\r\n    }),\r\n    //track events in that story: jei butu click\r\n    argTypes: {\r\n      toggleList: { action: toggleList() },\r\n      onEdit: { action: onEdit() },\r\n      onAction: { action: onAction() },\r\n      closePopover: { action: closePopover() },\r\n      onDelete: { action: onDelete() },\r\n    },\r\n    decorators: [\r\n      applicationConfig({\r\n        providers: [],\r\n      }),\r\n      moduleMetadata({\r\n        declarations: [ActionCardRowComponent],\r\n      }),\r\n      componentWrapperDecorator(\r\n        (story) => `<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\"><div class=\"card-body\" style=\"margin-top: 150px\"> ${story} </div>`\r\n      ),\r\n    ],\r\n  }"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ActionCardWithHomedata.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HomeComponent>",
                "defaultValue": "{\r\n  title: 'Project/ActionCardComponent',\r\n  component: HomeComponent,\r\n  tags: [],\r\n  render: (args: HomeComponent) => ({\r\n    props: { ...args },\r\n  }),\r\n  //track events in that story: jei butu click\r\n  argTypes: {\r\n    onEditCardRow: { action: 'editCardRow' },\r\n    onActionCardRow: { action: 'actionCardRow' },\r\n    onDeleteCardRow: { action: 'deleteCardRow' },\r\n\r\n    // toggleList: { action: toggleList() },\r\n    // onEdit: { action: onEdit() },\r\n    // onAction: { action: onAction() },\r\n    // closePopover: { action: closePopover() },\r\n    // onDelete: { action: onDelete() }\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [],\r\n    }),\r\n    moduleMetadata({\r\n      declarations: [ActionCardComponentComponent, ActionCardRowComponent],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) =>\r\n        `<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\"> <div style=\"font-family:'Exo', sans-serif\"> ${story}</div>`\r\n    ),\r\n  ],\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "RowWithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ActionCardRow.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n      row: {\r\n        cardRowTitle: 'Discover New Features',\r\n        isDeletableAction: false,\r\n        cardBadgeText: 'Must have item',\r\n        cardActionPopoverHeader:\r\n          'Do you want to delete this feature? First create another “must have tool”.',\r\n        cardActionPopoverBody:\r\n          'There must be at least one “Must have tool” in your list. If you wish to delete this feature, you first need to create another feature with the same badge.',\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n      deleteText: 'Delete?'\r\n    },\r\n  }"
            }
        ],
        "functions": [
            {
                "name": "closePopover",
                "file": "src/stories/ActionCardRow.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "void"
            },
            {
                "name": "onAction",
                "file": "src/stories/ActionCardRow.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "void"
            },
            {
                "name": "onDelete",
                "file": "src/stories/ActionCardRow.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "void"
            },
            {
                "name": "onEdit",
                "file": "src/stories/ActionCardRow.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "void"
            },
            {
                "name": "toggleList",
                "file": "src/stories/ActionCardRow.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "void"
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ActionCardComponentComponent>",
                "file": "src/stories/ActionCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ActionCardRowComponent>",
                "file": "src/stories/ActionCardRow.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HomeComponent>",
                "file": "src/stories/ActionCardWithHomedata.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/ActionCard.stories.ts": [
                {
                    "name": "ActionCardTitleRow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ActionCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        title: \"Card for Organizing Activities\",\r\n        addActivityText: \"Add activity\",\r\n        titleColor: 'red'\r\n    }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ActionCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ActionCardComponentComponent>",
                    "defaultValue": "{\r\n    title: 'Project/ActionCardComponent',\r\n    component: ActionCardComponentComponent,\r\n    tags: [],\r\n    render: (args: ActionCardComponentComponent) => ({\r\n        props: { ...args },\r\n    }),\r\n    //track events in that story: jei butu click\r\n    argTypes: { },\r\n    decorators: [\r\n        applicationConfig({\r\n            providers: []\r\n        }),\r\n        moduleMetadata({\r\n            declarations: [ ActionCardComponentComponent, ActionCardRowComponent ],\r\n        }),\r\n        componentWrapperDecorator((story)=> `<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\"> <div> ${story }</div>`),\r\n    ],\r\n}"
                }
            ],
            "src/stories/ActionCardWithHomedata.stories.ts": [
                {
                    "name": "ActionCardWithAllData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ActionCardWithHomedata.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    deleteText: 'Delete?',\r\n    cardContentRow: [\r\n      {\r\n        cardRowTitle: 'Discover New Features',\r\n        isDeletableAction: false,\r\n        cardBadgeText: 'Must have item',\r\n        cardActionPopoverHeader:\r\n          'Do you want to delete this feature? First create another “must have tool”.',\r\n        cardActionPopoverBody:\r\n          'There must be at least one “Must have tool” in your list. If you wish to delete this feature, you first need to create another feature with the same badge.',\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n      {\r\n        cardRowTitle: 'Better Workflow',\r\n        isDeletableAction: true,\r\n        cardBadgeText: '',\r\n        cardActionPopoverHeader: '',\r\n        cardActionPopoverBody: '',\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n      {\r\n        cardRowTitle: 'Achieve Great Results',\r\n        isDeletableAction: true,\r\n        cardBadgeText: '',\r\n        cardActionPopoverHeader: '',\r\n        cardActionPopoverBody: '',\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n    ], \r\n    onEditCardRow: () => console.log('Edit Card Row'),\r\n    onActionCardRow: () => console.log('Action Card Row'),\r\n    onDeleteCardRow: () => console.log('Delete Card Row'),\r\n \r\n}\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ActionCardWithHomedata.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HomeComponent>",
                    "defaultValue": "{\r\n  title: 'Project/ActionCardComponent',\r\n  component: HomeComponent,\r\n  tags: [],\r\n  render: (args: HomeComponent) => ({\r\n    props: { ...args },\r\n  }),\r\n  //track events in that story: jei butu click\r\n  argTypes: {\r\n    onEditCardRow: { action: 'editCardRow' },\r\n    onActionCardRow: { action: 'actionCardRow' },\r\n    onDeleteCardRow: { action: 'deleteCardRow' },\r\n\r\n    // toggleList: { action: toggleList() },\r\n    // onEdit: { action: onEdit() },\r\n    // onAction: { action: onAction() },\r\n    // closePopover: { action: closePopover() },\r\n    // onDelete: { action: onDelete() }\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [],\r\n    }),\r\n    moduleMetadata({\r\n      declarations: [ActionCardComponentComponent, ActionCardRowComponent],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) =>\r\n        `<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\"> <div style=\"font-family:'Exo', sans-serif\"> ${story}</div>`\r\n    ),\r\n  ],\r\n}"
                }
            ],
            "src/stories/ActionCardRow.stories.ts": [
                {
                    "name": "DeletableRow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ActionCardRow.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n      row: {\r\n        cardRowTitle: 'Discover New Features',\r\n        isDeletableAction: true,\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n    },\r\n  }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ActionCardRow.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ActionCardRowComponent>",
                    "defaultValue": "{\r\n    title: 'Project/ActionCardRow',\r\n    component: ActionCardRowComponent,\r\n    tags: [],\r\n    render: (args: ActionCardRowComponent) => ({\r\n      props: { ...args },\r\n    }),\r\n    //track events in that story: jei butu click\r\n    argTypes: {\r\n      toggleList: { action: toggleList() },\r\n      onEdit: { action: onEdit() },\r\n      onAction: { action: onAction() },\r\n      closePopover: { action: closePopover() },\r\n      onDelete: { action: onDelete() },\r\n    },\r\n    decorators: [\r\n      applicationConfig({\r\n        providers: [],\r\n      }),\r\n      moduleMetadata({\r\n        declarations: [ActionCardRowComponent],\r\n      }),\r\n      componentWrapperDecorator(\r\n        (story) => `<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\"><div class=\"card-body\" style=\"margin-top: 150px\"> ${story} </div>`\r\n      ),\r\n    ],\r\n  }"
                },
                {
                    "name": "RowWithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ActionCardRow.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n      row: {\r\n        cardRowTitle: 'Discover New Features',\r\n        isDeletableAction: false,\r\n        cardBadgeText: 'Must have item',\r\n        cardActionPopoverHeader:\r\n          'Do you want to delete this feature? First create another “must have tool”.',\r\n        cardActionPopoverBody:\r\n          'There must be at least one “Must have tool” in your list. If you wish to delete this feature, you first need to create another feature with the same badge.',\r\n        cardRowListItems: [\r\n          'Interactive Dashboard',\r\n          'Smart Reminders & Notifications',\r\n          'Data-driven Decision Making',\r\n        ],\r\n      },\r\n      deleteText: 'Delete?'\r\n    },\r\n  }"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/stories/ActionCardRow.stories.ts": [
                {
                    "name": "closePopover",
                    "file": "src/stories/ActionCardRow.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "void"
                },
                {
                    "name": "onAction",
                    "file": "src/stories/ActionCardRow.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "void"
                },
                {
                    "name": "onDelete",
                    "file": "src/stories/ActionCardRow.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "void"
                },
                {
                    "name": "onEdit",
                    "file": "src/stories/ActionCardRow.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "void"
                },
                {
                    "name": "toggleList",
                    "file": "src/stories/ActionCardRow.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "void"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/ActionCard.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ActionCardComponentComponent>",
                    "file": "src/stories/ActionCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/ActionCardRow.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ActionCardRowComponent>",
                    "file": "src/stories/ActionCardRow.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/ActionCardWithHomedata.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HomeComponent>",
                    "file": "src/stories/ActionCardWithHomedata.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/action-card-module/components/action-card-component/action-card-component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionCardComponentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/action-card-module/components/action-card-component/action-card-content-interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ActionCardContentInterface",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/action-card-module/components/action-card-row/action-card-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionCardRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ActionCardTitleRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardRow.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "closePopover",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardRow.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "onAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardRow.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "onDelete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardRow.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "onEdit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardRow.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "toggleList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardRow.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeletableRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardRow.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardRow.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RowWithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardWithHomedata.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ActionCardWithAllData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ActionCardWithHomedata.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}